<?php
declare (strict_types = 1);

namespace app\model;

use app\controller\common\Common;
use app\service\TokenService;
use ruhua\bases\BaseModel;
use ruhua\exceptions\BaseException;


class Admin extends BaseModel
{
    public static function login($data)
    {
        $psw=(new Common())->password($data['psw']);
        $where=[
            'username'=>$data['username'],
            'password'=>$psw
        ];
        $user=self::where($where)->find();
        if(!$user){
            throw new BaseException(['msg'=>'账号或密码错误']);
        }
        if ($user['state'] == 1) {
            throw new BaseException(['msg'=>'已禁用']);
        }
        $data=[
            'admin_id'=>$user['id'],
            'group'=>$user['group'],
            'username'=>$user['username']
        ];
        $res=(new TokenService())->saveCache($data);
        return ['token'=>$res];
    }

    public static function mobile_login($data)
    {
        $res=Common::checkCode($data['mobile'],$data['code']);
        if(!$res)
        {
            throw new BaseException(['msg'=>'账号或密码错误']);
        }
        $user=self::where('mobile',$data['mobile'])->find();
        if(!$user){
            throw new BaseException(['msg'=>'账号或密码错误']);
        }
        if ($user['state'] == 1) {
            throw new BaseException(['msg'=>'已禁用']);
        }
        $data=[
            'admin_id'=>$user['id'],
            'group'=>$user['group'],
            'username'=>$user['username']
        ];
        $res=(new TokenService())->saveCache($data);
        return ['token'=>$res];
    }
}
